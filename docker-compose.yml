version: '3.9'
services:
  postgres:
    container_name: megami-db
    image: postgres:13.3
    env_file:
      - .env
    volumes:
      - ${MEGAMI_POSTGRES_VOLUME}:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    restart: unless-stopped
    networks:
      - megami-network

  pgadmin:
    container_name: megami-pgadmin
    depends_on:
      - postgres
    image: dpage/pgadmin4:5.7
    env_file:
      - .env
    volumes:
      - ${MEGAMI_PGADMIN_VOLUME}:${PGADMIN_DATA}
    ports:
      - '${PGADMIN_EXTERNAL_PORT}:80'
    restart: unless-stopped
    networks:
      - megami-network

  #megami:
  #  container_name: megami-backend
  #  image: megami-backend
  #  env_file:
  #    - .env
  #  depends_on:
  #    - postgres
  #  build:
  #    dockerfile: './Dockerfile'
  #    context: '.'
  #    args:
  #      MEGAMI_ASSETS_PUBLIC_DIR: '${MEGAMI_ASSETS_PUBLIC_DIR}'
  #      MEGAMI_FILES_DIR: '${MEGAMI_FILES_DIR}'
  #      MEGAMI_VOLUMES_DIR: '${MEGAMI_VOLUMES_DIR}'
  #      MEGAMI_SETTINGS_VOLUME_NAME: '${MEGAMI_SETTINGS_VOLUME_NAME}'
  #  ports:
  #    - '${MEGAMI_EXTERNAL_PORT}:${MEGAMI_INTERNAL_PORT}'
  #  expose:
  #    - '${MEGAMI_EXTERNAL_PORT}'
  #  volumes:
  #    - ./${MEGAMI_ASSETS_PUBLIC_DIR}/${MEGAMI_FILES_DIR}:/app/${MEGAMI_ASSETS_PUBLIC_DIR}/${MEGAMI_FILES_DIR}
  #    - ${MEGAMI_SETTINGS_VOLUME}:/app/${MEGAMI_VOLUMES_DIR}/${MEGAMI_SETTINGS_VOLUME_NAME}
  #  networks:
  #    - megami-network

networks:
  megami-network:
    driver: bridge
